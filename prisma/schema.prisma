generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model Pedido {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  idPedido Int
  menu Menu @relation(fields: [menuId], references: [idMenu])
  menuId Int
  cliente UserDB @relation(fields: [clienteId], references: [idSembrador])
  clienteId Int
  comentario String
}

model Menu {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  idMenu Int @unique
  fecha String
  opcion String
  tipo String
  pedidos Pedido[]
}

model UserDB {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  idSembrador Int @unique
  email String @unique
  fullname String
  direccion String
  departamento String?
  celular Float
  role Role @default(Usuario)
  pedidos Pedido[]
}

enum Role {
  Admin
  Usuario
  Cliente
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}